package academy.belhard;

/**
 * Абстрактный класс Figure
 * Не может создавать экземпляры своего же типа
 * Но предоставляет базовую структуру для своих классов наследников
 */
public abstract class Figure {
    /**
     * Поля, которые будут доступны для классов наследников
     * Поля представляют собой 2 стороны будущей фигуры
     */
    protected double a;
    protected double b;

    /**
     * Конструктор
     */
    public Figure(double a, double b) {
        this.a = a;
        this.b = b;
    }

    /**
     * Абстрактный метод расчета площади фигуры
     * Должен быть определен в классе наследнике в зависимости от типа фигуры
     */
    public abstract double area();

    /**
     * Абстрактный метод расчета периметра фигуры
     * Должен быть определен в классе наследнике в зависимости от типа фигуры
     */
    public abstract double perimeter();

    /**
     * Абстрактный метод возвращающий название фигуры
     * Должен быть определен в классе наследнике в зависимости от типа фигуры
     */
    public abstract String figureName();
}
